name: Build macOS Executable
on: [push]

jobs:
  build-macos:
    runs-on: macos-latest
    env:
      EXPECTED_DESCRIPTION: "Rutoken ECP PKCS #11 library"
      PKCS11_VERSION: "Current" # bump to refresh cache when library updates

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          cache: 'pip'
          cache-dependency-path: 'requirements-build.txt'

      - name: Install build dependencies
        run: pip install -r requirements-build.txt

      - name: Cache RT PKCS#11 framework
        id: cache-pkcs11
        uses: actions/cache@v4
        with:
          path: rtpkcs11ecp.framework.zip
          key: pkcs11-${{ runner.os }}-${{ env.PKCS11_VERSION }}

      - name: Download RT PKCS#11 Framework
        if: steps.cache-pkcs11.outputs.cache-hit != 'true'
        run: |
          # Скачиваем zip-фреймворк (x64+arm64)
          curl -L -o rtpkcs11ecp.framework.zip \
            https://download.rutoken.ru/Rutoken/PKCS11Lib/Current/Mac/x64+arm64/rtpkcs11ecp.framework.zip

      - name: Extract RT PKCS#11 Framework
        run: |
          # Распаковываем: zip содержит папку rtpkcs11ecp.framework
          unzip -o rtpkcs11ecp.framework.zip
          # Находим папку Versions внутри фреймворка
          version_dir=$(find rtpkcs11ecp.framework/Versions -maxdepth 1 -type d | sort | tail -n 1)
          # Копируем бинарник из Version/* и даём ему расширение .dylib
          cp "$version_dir/rtpkcs11ecp" rtpkcs11ecp.dylib

      - name: Build executable (onefile)
        run: |
          rm -rf build/ dist/ main.spec
          pyinstaller --onefile main.py

      - name: Copy dylib next to exe
        run: |
          cp rtpkcs11ecp.dylib dist/

      - name: Test application
        shell: bash
        run: |
          output=$(./dist/main --library-info 2>&1)
          echo "App output:"; echo "$output"
          if ! echo "$output" | grep -F "Library Description: $EXPECTED_DESCRIPTION"; then
            echo "❌ Expected 'Library Description: $EXPECTED_DESCRIPTION' not found" >&2
            exit 1
          fi
          echo "✅ Library Description matches expected"

      - name: Upload macOS package
        uses: actions/upload-artifact@v4
        with:
          name: macos-package
          path: dist/**
