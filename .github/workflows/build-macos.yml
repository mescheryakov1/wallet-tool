name: Build macOS Executable

on: [push]

jobs:
  build-macos:
    runs-on: macos-latest
    permissions:
      contents: read
    env:
      EXPECTED_DESCRIPTION: "Rutoken Wallet PKCS #11 library"
      PKCS11_VERSION: "3rdparty"
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v4

      - name: Install native dependencies
        run: |
          brew update
          brew install pcsc-lite || true

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
          cache: 'pip'
          cache-dependency-path: 'requirements-build.txt'

      - name: Install build dependencies
        run: pip install -r requirements-build.txt

      - name: Cache WT PKCS#11 files
        id: cache-pkcs11
        uses: actions/cache@v4
        with:
          path: |
            .cache/wtpkcs11ecp
            wtpkcs11ecp.dylib
          key: pkcs11-${{ runner.os }}-${{ env.PKCS11_VERSION }}

      - name: Download WT PKCS#11 .dylib
        if: steps.cache-pkcs11.outputs.cache-hit != 'true'
        run: |
          python scripts/download_wtpkcs11ecp.py \
            --tag 3rdparty \
            --pattern macos \
            --pattern x86_64 \
            --library-pattern wtpkcs11ecp.dylib \
            --target wtpkcs11ecp.dylib

      - name: Build executable
        run: pyinstaller --onefile main.py

      - name: Copy .dylib
        run: cp wtpkcs11ecp.dylib dist/

      - name: Codesign main and dylib
        run: |
          codesign --force --sign - dist/wtpkcs11ecp.dylib
          codesign --force --sign - dist/main

      - name: Test application
        shell: bash
        run: |
          pushd dist > /dev/null

          # запускаем бинарь и игнорируем код выхода чтобы не сработал -e
          output=$(./main --library-info 2>&1 || true)
          status=$?

          popd > /dev/null

          echo "program exit code: $status"

          echo "=== library-info raw output begin ==="
          echo "$output"
          echo "=== library-info raw output end ==="

          actual_desc=$(echo "$output" \
            | sed -n 's/^[[:space:]]*Library Description:[[:space:]]*//p' \
            | head -n1 \
            | sed 's/[[:space:]]*$//')

          echo "Detected description: '$actual_desc'"
          echo "Expected description: '$EXPECTED_DESCRIPTION'"

          if [ -z "$actual_desc" ]; then
            echo "❌ не удалось извлечь Library Description из вывода" >&2
            exit 1
          fi

          if [ "$actual_desc" != "$EXPECTED_DESCRIPTION" ]; then
            echo "❌ строка не совпала" >&2
            exit 1
          fi

          echo "✅ библиотека загружена и строка совпала"

      - name: Upload macOS package
        uses: actions/upload-artifact@v4
        with:
          name: macos-package
          path: dist/**
