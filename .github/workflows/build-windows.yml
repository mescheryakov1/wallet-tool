name: Build Windows Executable

# Запускаем при пуше в любую ветку
on: [push]

jobs:
  build-windows:
    runs-on: windows-latest
    env:
      EXPECTED_DESCRIPTION: "Rutoken ECP PKCS #11 library"

    steps:
      # 1. Забираем ваш код
      - uses: actions/checkout@v4

      # 2. Устанавливаем Python (можете указать вашу версию, например 3.12)
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Download pkcs11 dll
        shell: pwsh
        run: Invoke-WebRequest -Uri "http://download.rutoken.ru/Rutoken/PKCS11Lib/Current/Windows/x64/rtpkcs11ecp.dll" -OutFile rtpkcs11ecp.dll

      # 3. Ставим PyInstaller
      - name: Install PyInstaller
        run: pip install pyinstaller

      # 4. Собираем один exe-файл
      - name: Build exe
        run: pyinstaller --onefile main.py
        
      - name: Copy DLL
        shell: pwsh
        run: Copy-Item rtpkcs11ecp.dll dist\

      - name: Test application
        shell: pwsh
        run: '$output = & .\dist\main.exe; Write-Host "App output:`n$output"; if ($output -notmatch ''Library Description:\s*(.+)'' ) { Write-Error "Не удалось найти Library Description в выводе"; exit 1 }; $actual = $Matches[1].Trim(); Write-Host "Found description: ''$actual''"; if ($actual -ne $env:EXPECTED_DESCRIPTION) { Write-Error "Library Description не совпадает! Ожидали ''$env:EXPECTED_DESCRIPTION'', получили ''$actual''"; exit 1 }'

      # 5. Загружаем получившийся exe как артефакт
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-package
          path: dist/**
